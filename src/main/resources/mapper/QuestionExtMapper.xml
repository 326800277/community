<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <!--我可去你大爷的，namespace错了，你凭啥给我报userService注入失败？？？？？？
        Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'userMapper';-->
<mapper namespace="weididi.community.community.mapper.QuestionExtMapper">
    <resultMap id="BaseResultMap" type="weididi.community.community.model.Question">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Aug 16 18:09:43 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
        <result column="gmt_modify" jdbcType="BIGINT" property="gmtModify" />
        <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
        <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
        <result column="view_count" jdbcType="INTEGER" property="viewCount" />
        <result column="like_count" jdbcType="INTEGER" property="likeCount" />
        <result column="tag" jdbcType="VARCHAR" property="tag" />
    </resultMap>

    <!--原来的，map是因为传入的参数有两个，这里取得questionMapper的形参，形成map集合，传入时@param("record")定义了
<update id="updateByExample" parameterType="map">
    update question
    set id = #{record.id,jdbcType=INTEGER},
    title = #{record.title,jdbcType=VARCHAR},
    gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
    gmt_modify = #{record.gmtModify,jdbcType=BIGINT},
    creator_id = #{record.creatorId,jdbcType=INTEGER},
    comment_count = #{record.commentCount,jdbcType=INTEGER},
    view_count = #{record.viewCount,jdbcType=INTEGER},
    like_count = #{record.likeCount,jdbcType=INTEGER},
    tag = #{record.tag,jdbcType=VARCHAR}
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
    </if>
</update>-->


    <!--这里的record.viewCount就是传入数据，确定每次增加的数目,这个地方，不用用record.来确定变量-->
    <update id="incView" parameterType="weididi.community.community.model.Question">
        update question
        set
         view_count =view_count+ #{viewCount,jdbcType=INTEGER}
        where id=#{id}
    </update>
    <update id="incCommentCount" parameterType="weididi.community.community.model.Question">
        update question
        set
         comment_count =comment_count+ #{commentCount,jdbcType=INTEGER}
        where id=#{id}
    </update>

    <!--regexp正则表达式对象，按传入的tag标签模糊查找-->
    <select id="selectRelated" parameterType="weididi.community.community.model.Question" resultMap="BaseResultMap">
        select * from question where id!=#{id} and tag regexp #{tag}
    </select>

    <select id="countBySearch" parameterType="weididi.community.community.dto.QuestionQueryDTO" resultType="java.lang.Integer">
        select count(*) from question
        <where>
            <if test="search != null">
                and title regexp #{search}
            </if>
        </where>
    </select>

    <select id="selectBySearch" parameterType="weididi.community.community.dto.QuestionQueryDTO" resultMap="BaseResultMap">
        select * from question
        <where>
            <if test="search != null">
                and title regexp #{search}
            </if>
        </where>
        order by gmt_create desc limit #{page},#{size}
    </select>

</mapper>